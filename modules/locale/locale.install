<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function locale_install() {
  // locales_source.source and locales_target.target are not used as binary
  // fields; non-MySQL database servers need to ensure the field type is text
  // and that LIKE produces a case-sensitive comparison.
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {languages} (
        language varchar(12) NOT NULL default '',
        name varchar(64) NOT NULL default '',
        native varchar(64) NOT NULL default '',
        direction int NOT NULL default '0',
        enabled int NOT NULL default '0',
        plurals int NOT NULL default '0',
        formula varchar(128) NOT NULL default '',
        domain varchar(128) NOT NULL default '',
        prefix varchar(128) NOT NULL default '',
        weight int NOT NULL default '0',
        PRIMARY KEY (language)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      db_query("CREATE TABLE {locales_source} (
        lid int NOT NULL auto_increment,
        location varchar(255) NOT NULL default '',
        textgroup varchar(255) NOT NULL default '',
        source blob NOT NULL,
        PRIMARY KEY (lid),
        KEY source (source(30))
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      db_query("CREATE TABLE {locales_target} (
        lid int NOT NULL default '0',
        translation blob NOT NULL,
        language varchar(12) NOT NULL default '',
        plid int NOT NULL default '0',
        plural int NOT NULL default '0',
        KEY lid (lid),
        KEY lang (language),
        KEY plid (plid),
        KEY plural (plural)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      break;

    case 'pgsql':
      db_query("CREATE TABLE {languages} (
        language varchar(12) NOT NULL default '',
        name varchar(64) NOT NULL default '',
        native varchar(64) NOT NULL default '',
        direction int NOT NULL default '0',
        enabled int NOT NULL default '0',
        plurals int NOT NULL default '0',
        formula varchar(128) NOT NULL default '',
        domain varchar(128) NOT NULL default '',
        prefix varchar(128) NOT NULL default '',
        weight int NOT NULL default '0',
        PRIMARY KEY (language)
      )");

      db_query("CREATE TABLE {locales_source} (
        lid serial,
        location varchar(255) NOT NULL default '',
        textgroup varchar(255) NOT NULL default '',
        source text NOT NULL,
        PRIMARY KEY (lid)
      )");

      db_query("CREATE TABLE {locales_target} (
        lid int NOT NULL default '0',
        translation text NOT NULL,
        language varchar(12) NOT NULL default '',
        plid int NOT NULL default '0',
        plural int NOT NULL default '0'
      )");
      db_query("CREATE INDEX {locales_target}_lid_idx ON {locales_target} (lid)");
      db_query("CREATE INDEX {locales_target}_language_idx ON {locales_target} (language)");
      db_query("CREATE INDEX {locales_target}_plid_idx ON {locales_target} (plid)");
      db_query("CREATE INDEX {locales_target}_plural_idx ON {locales_target} (plural)");
      db_query("CREATE INDEX {locales_source}_source_idx ON {locales_source} (source)");
      break;
  }
  db_query("INSERT INTO {languages} (language, name, native, direction, enabled, weight) VALUES ('en', 'English', 'English', '0', '1', '0')");
}

/**
 * @defgroup updates-5.x-to-6.x Locale updates from 5.x to 6.x
 * @{
 */

/**
 * {locales_meta} table became {languages}.
 */
function locale_update_6001() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("CREATE TABLE {languages} (
        language varchar(12) NOT NULL default '',
        name varchar(64) NOT NULL default '',
        native varchar(64) NOT NULL default '',
        direction int NOT NULL default '0',
        enabled int NOT NULL default '0',
        plurals int NOT NULL default '0',
        formula varchar(128) NOT NULL default '',
        domain varchar(128) NOT NULL default '',
        prefix varchar(128) NOT NULL default '',
        weight int NOT NULL default '0',
        PRIMARY KEY (language)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      break;
    case 'pgsql':
      $ret[] = update_sql("CREATE TABLE {languages} (
        language varchar(12) NOT NULL default '',
        name varchar(64) NOT NULL default '',
        native varchar(64) NOT NULL default '',
        direction int NOT NULL default '0',
        enabled int NOT NULL default '0',
        plurals int NOT NULL default '0',
        formula varchar(128) NOT NULL default '',
        domain varchar(128) NOT NULL default '',
        prefix varchar(128) NOT NULL default '',
        weight int NOT NULL default '0',
        PRIMARY KEY (language)
      )");
      break;
  }

  // Save the languages
  $ret[] = update_sql("INSERT INTO {languages} (language, name, native, direction, enabled, plurals, formula, domain, prefix, weight) SELECT locale, name, '', 0, enabled, plurals, formula, '', locale, 0 FROM {locales_meta}");

  // Save the language count in the variable table
  $count = db_result(db_query('SELECT COUNT(*) FROM {languages} WHERE enabled = 1'));
  variable_set('language_count', $count);

  // Save the default language in the variable table
  $default = db_fetch_object(db_query('SELECT * FROM {locales_meta} WHERE isdefault = 1'));
  variable_set('language_default', (object) array('language' => $default->locale, 'name' => $default->name, 'native' => '', 'direction' => 0, 'enabled' => 1, 'plurals' => $default->plurals, 'formula' => $default->formula, 'domain' => '', 'prefix' => $default->locale, 'weight' => 0));

  $ret[] = update_sql("DROP TABLE {locales_meta}");
  return $ret;
}

/**
 * Add multiple text group support to allow for user defined string translation.
 */
function locale_update_6002() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_add_column($ret, 'locales_source', 'textgroup', 'varchar(255)', array('default' => "''", 'not null' => TRUE));
      break;
    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {locales_source} ADD textgroup varchar(255) NOT NULL default ''");
      break;
  }
  return $ret;
}

/**
 * @} End of "defgroup updates-5.x-to-6.x"
 */

/**
 * Implementation of hook_uninstall().
 */
function locale_uninstall() {
  db_query('DROP TABLE {languages}');
  db_query('DROP TABLE {locales_source}');
  db_query('DROP TABLE {locales_target}');
}
