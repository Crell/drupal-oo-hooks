<?php
// $Id$

function tracker_help($section = 'admin/help#tracker') {
  switch ($section) {
    case 'admin/help#tracker':
      return t('<p>The tracker module is a handy module for displaying the most recent posts.  By following the <em>recent posts</em> link in the user block, a user may quickly review all recent postings.</p>');
    case 'admin/system/modules#description':
      return t('Enables tracking of recent posts for users.');
  }
}

function tracker_link($type) {
  if ($type == 'system' && user_access('access content')) {
    menu('tracker', t('recent posts'), 'tracker_page', 1);
  }
}

function tracker_page() {
  global $user;

  $output .= '';

  if ($user->uid) {
    $output .= "<ul>";
    $output .= " <li>". l(t('Your active posts and discussions'), "tracker/$user->uid") ."</li>";
    $output .= " <li>". l(t('All active posts and discussions'), 'tracker') ."</li>";
    $output .= "</ul>";
  }

  if (arg(1)) {
    $uid = check_query(arg(1));

    $result = pager_query("SELECT n.nid, n.title, n.type, n.changed, n.uid, u.name, MAX(GREATEST(n.changed, c.timestamp)) AS last_post FROM {node} n LEFT JOIN {comments} c ON n.nid = c.nid INNER JOIN {users} u ON n.uid = u.uid WHERE n.status = 1 AND (n.uid = '$uid' OR c.uid = '$uid') GROUP BY n.nid, n.title, n.type, n.changed, n.uid, u.name ORDER BY last_post DESC", 25, 0, "SELECT COUNT(DISTINCT(n.nid)) FROM {node} n LEFT JOIN {comments} c ON n.nid = c.nid WHERE n.status = 1 AND (n.uid = '$uid' OR c.uid = '$uid')");

  }
  else {
    $result = pager_query("SELECT n.nid, n.title, n.type, n.changed, n.uid, u.name, MAX(GREATEST(n.changed, c.timestamp)) AS last_post FROM {node} n LEFT JOIN {comments} c ON n.nid = c.nid INNER JOIN {users} u ON n.uid = u.uid WHERE n.status = 1 GROUP BY n.nid, n.title, n.type, n.changed, n.uid, u.name ORDER BY last_post DESC", 25, 0, "SELECT COUNT(nid) FROM {node} WHERE status = 1");
  }

  while ($node = db_fetch_object($result)) {
    // Determine the number of comments:
    if ($all = comment_num_all($node->nid)) {
      $comments = $all;

      if ($new = comment_num_new($node->nid)) {
        $comments .= '<br />';
        $comments .= l(t('%a new', array('%a' => $new)), "node/view/$node->nid", NULL, NULL, 'new');
      }
    }
    else {
      $comments = 0;
    }

    $rows[] = array(
      ucfirst(node_invoke($node->type, "node_name")),
      l($node->title, "node/view/$node->nid") ." ". (node_is_new($node->nid, $node->changed) ? theme("mark") : ''),
      format_name($node),
      array('class' => 'replies', 'data' => $comments),
      format_interval(time() - $node->last_post) ." ". t('ago')
    );
  }

  if ($pager = theme('pager', NULL, 25, 0)) {
   $rows[] = array(array('data' => $pager, 'colspan' => 4));
  }

  $header = array(t('Type'),  t('Post'), t('Author'), t('Replies'), t('Last post'));

  $output .= "<div id=\"tracker\">";
  $output .= theme("table", $header, $rows);
  $output .= "</div>";

  print theme('page', $output);
}

function tracker_user($type, &$edit, &$user) {
  if ($type == 'view' && user_access("access content")) {
    return form_item(t("Recent posts"), l(t("recent posts"), "tracker/$user->uid"));
  }
}

?>
