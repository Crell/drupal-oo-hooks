<?php
// $Id$

function blog_system($field){
  $output = "";

  if ($field == "description") { $output = blog_help("admin/system/modules"); }
  else if ($field == "admin_help") { $output = blog_help("admin/system/modules/blog"); };

  return $output;
}

function blog_settings() {
  $output = form_textarea(t("Explanation or submission guidelines"), "blog_help", variable_get("blog_help", ""), 70, 4, t("This text is displayed at the top of the blog submission form.  It's useful for helping or instructing your users."));
  $words = t("words");
  $output .= form_select(t("Minimum number of words in a blog entry"), "minimum_blog_size", variable_get("minimum_blog_size", 0), array(0 => "0 $words", 10 => "10 $words", 25 => "25 $words",  50 => "50 $words", 75 => "75 $words", 100 => "100 $words", 125 => "125 $words",  150 => "150 $words", 175 => "175 $words", 200 => "200 $words"), t("The minimum number of words a personal blog entry should contain.  This is useful to rule out submissions that do not meet the site's standards, such as short test posts."));
  return $output;
}

function blog_node($field) {
  global $user;

  $info["name"] = t("personal blog entry");
  $info["description"] = t("A blog is a regularly updated journal made up of individual entries, often called posts, that are time stamped and typically arranged by the day, with the newest on top (a diary is the reverse).  They tend to be quite personal, often containing links to things you've seen, or to editorials that you find interesting.   Some blogs also contain original material written solely for the blog.  Since a Blog is personal, you and only you have full control over what you publish.  The most interesting blog entries or those blog entries that fit the site's topic well might get promoted to the front page by the community or by users with the access do this.");

  return $info[$field];
}

function blog_perm() {
  return array("maintain personal blog");
}

function blog_access($op, $node) {
  global $user;

  if ($op == "view") {
    return $node->status;
  }

  if ($op == "create") {
    return user_access("maintain personal blog") && $user->uid;
  }

  if ($op == "update") {
    return user_access("maintain personal blog") && ($user->uid == $node->uid);
  }

  if ($op == "delete") {
    return user_access("maintain personal blog") && ($user->uid == $node->uid);
  }

}

function blog_head($main = 0) {
  $mod = arg(0);
  $id = arg(1);

  $output = array();

  if ($mod == "blog") {
    $output[] = "<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS feed\" href=\"". url("blog/feed/$id") ."\" />";
  }

  return $output;
}

function blog_user($type, &$edit, &$user) {
  switch ($type) {
    case "view_public":
    case "view_private":
      if (user_access("maintain personal blog", $user)) {
        return form_item(t("Blog"), l(t("view recent blog entries"), "blog/$user->uid", array("title" => t("Read %username's latest blog entries.", array("%username" => $user->name)))));
      }
  }
}

function blog_help($section) {
  $output ="";

  switch ($section) {
    case 'admin/blog/help':
    case 'admin/help':
      $output .= "<p>Drupal's blog module allows registered users to maintain an online weblog (commonly known as a blog), often referred to as an online journal or diary.  These can be filled with daily thoughts, poetry, boneless blabber, spiritual theories, intimate details, valuable experiences, cynical rants, semi-coherent comments, writing experiments, artistic babblings, critics on current facts, fresh insights, diverse dreams, chronicles and mumbling madness available for public consumption.</p>";
      $output .= strtr("<p>Blogs are made up of individual entries (nodes) that are timestamped and are typically viewed by day as you would a diary.  Blogs often contain links to things you've seen and/or agree/disagree with.  A typical example of a long term blog can be seen at %scripting-com.</p>", array("%scripting-com" => "<a href=\"http://www.scripting.com/\">". t("http://www.scripting.com/") ."</a>" ));
      $output .= "<p>The blog module adds a \"user blogs\" navigation link to the site, which takes any visitor to a page that displays the most recent blog entries from all the users on the site. Personal user menus gain a \"create a blog entry\" link (which takes you to a submission form) and a \"view personal blog\" link (which displays your blog entries as other people will see them).  On the bottom of each of your own blog entries, there is an \"edit this blog entry\" link that lets you edit or delete that entry.</p>";
      $output .= "<p>If a user has the ability to post blogs, then the import module (news aggregator) will display a blog-it link <b>(b)</b> next to each news item in its lists.  Click on this and you will be taken to the blog submission form, with the title, a link to the item, and a link to the source into the body text already in the text box, ready for you to add your explanation.  This actively encourages people to add blog entries about things they see and hear elsewhere in the Drupal site and from your syndicated partner sites.</p>";
      break;
    case 'admin/system/modules':
      $output .= "Enables keeping a blog or easily and regularly updated web page.";
      break;
    case 'admin/system/modules/blog':
      $output .= "A weBLOG is a running journal of a users ideas. Enter the minimum word count for a single entry, and the text displayed on the entry submission form";
      break;
  }

  return t($output);
}

function blog_feed_user($uid = 0) {
  global $user;

  if ($uid) {
    $account = user_load(array("uid" => $uid, "status" => 1));
  }
  else {
    $account = $user;
  }

  $result = db_query_range("SELECT n.nid, n.title, n.teaser, n.created, u.name, u.uid FROM {node} n INNER JOIN {users} u ON n.uid = u.uid WHERE n.type = 'blog' AND u.uid = %d AND n.status = 1 ORDER BY n.nid DESC", $uid, 0, 15);
  $channel["title"] = $account->name. "'s blog";
  $channel["link"] = url("blog/view/$uid");
  $channel["description"] = $term->description;
  node_feed($result, $channel);
}

function blog_feed_last() {
  $result = db_query_range("SELECT n.nid, n.title, n.teaser, n.created, u.name, u.uid FROM {node} n INNER JOIN {users} u ON n.uid = u.uid WHERE n.type = 'blog' AND n.status = 1 ORDER BY n.nid DESC", 0, 15);
  $channel["title"] = variable_get("site_name", "drupal") ." blogs";
  $channel["link"] = url("blog");
  $channel["description"] = $term->description;
  node_feed($result, $channel);
}

function blog_page_user($uid) {
  $account = user_load(array((is_numeric($uid) ? "uid" : "name") => $uid, "status" => 1));

  // Breadcrumb navigation:
  $breadcrumb[] = l(t("Home"), NULL);
  $breadcrumb[] = l(t("Blogs"), "blog");
  $breadcrumb[] = t("%name's blog", array("%name" => $account->name));
  theme("breadcrumb", $breadcrumb);

  $result = pager_query("SELECT nid FROM {node} WHERE type = 'blog' AND uid = '$account->uid' AND status = 1 ORDER BY nid DESC", variable_get("default_nodes_main", 10));
  while ($node = db_fetch_object($result)) {
    node_view(node_load(array("nid" => $node->nid)), 1);
  }
  print pager_display(NULL, variable_get("default_nodes_main", 10));
  print "<div style=\"text-align: right\">" . l("<img src=\"". theme("image", "xml.gif") ."\" width=\"36\" height=\"14\" style=\"border: 0px;\" alt=\"\" title=\"\" />", "blog/feed/$account->uid", array("title" => t("View the XML version of %username's blog", array ("%username" => $account->name)))) . "</div>";
}

function blog_page_last() {
  global $user;

  // Breadcrumb navigation:
  $breadcrumb[] = l(t("Home"), NULL);
  $breadcrumb[] = t("Blogs");
  theme("breadcrumb", $breadcrumb);

  $result = pager_query("SELECT nid FROM {node} WHERE type = 'blog' AND status = 1 ORDER BY nid DESC", variable_get("default_nodes_main", 10));

  while ($node = db_fetch_object($result)) {
    node_view(node_load(array("nid" => $node->nid)), 1);
  }
  print pager_display(NULL, variable_get("default_nodes_main", 10));
  print "<div style=\"text-align: right;\">". l("<img src=\"". theme("image", "xml.gif") ."\" width=\"36\" height=\"14\" style=\"border: 0px;\" alt=\"\" title=\"\" />", "blog/feed", array("title" => t("Read the XML version of all blogs."))) ."</div>";
}

function blog_validate(&$node) {

  /*
  ** Validate the size of the blog:
  */

  if (isset($node->body) && count(explode(" ", $node->body)) < variable_get("minimum_blog_size", 0)) {
    $error["body"] = theme("theme_error", t("The body of your blog is too short."));
  }

  return $error;
}

function blog_form(&$node, &$help, &$error) {
  global $nid;
  $iid = $_GET["iid"];

  /*
  ** Carry out some explanation or submission guidelines:
  */

  $help = variable_get("blog_help", "");

  if (empty($node->body)) {
    /*
    ** If the user clicked a "blog it" link, we load the data from the
    ** database and quote it in the blog:
    */

    if ($nid && $blog = node_load(array("nid" => $nid))) {
      $node->body = "<i>". $blog->body ."</i> [". l($blog->name, "node/view/$nid") ."]";
    }

    if ($iid && $item = db_fetch_object(db_query("SELECT i.*, f.title as ftitle, f.link as flink FROM {item} i, {feed} f WHERE i.iid = %d AND i.fid = f.fid", $iid))) {
      $node->title = $item->title;
      $node->body = "<a href=\"$item->link\">$item->title</a> - <i>". check_output($item->description) ."</i> [<a href=\"$item->flink\">$item->ftitle</a>]\n";
    }
  }

  if (function_exists("taxonomy_node_form")) {
    $output .= implode("", taxonomy_node_form("blog", $node));
  }

  $output .= form_textarea(t("Body"), "body", $node->body, 60, 15, $error["body"] ? $error["body"] : form_allowed_tags_text());

  return $output;
}

function blog_page() {

  if (user_access("access content")) {
    switch (arg(1)) {
      case "feed":
        if (arg(2)) {
          blog_feed_user(arg(2));
        }
        else {
          blog_feed_last();
        }
        break;
      default:
        theme("header");
        if (arg(1)) {
          blog_page_user(arg(1));
        }
        else {
          blog_page_last();
        }
        theme("footer");
    }
  }
  else {
    theme("header");
    theme("box", t("Access denied"), message_access());
    theme("footer");
  }

}

function blog_content($node) {
  $node->teaser = check_output($node->teaser);
  $node->body = check_output($node->body);
  return $node;
}

function blog_view($node, $main = 0) {
  if ($main == 0) {
    // Breadcrumb navigation
    $breadcrumb[] = l(t("Home"), NULL);
    $breadcrumb[] = l(t("%name's blog", array("%name" => $node->name)), "blog/$node->uid");
    // print the breadcrumb
    theme("breadcrumb",$breadcrumb);
  }
  // prepair the node content
  $node = blog_content($node);
  // print the node
  theme("node", $node, $main);
}

function blog_link($type, $node = 0, $main) {
  global $user;

  $links = array();

  if ($type == "system") {
    if (user_access("maintain personal blog")) {
      menu("node/add/blog", t("blog entry"), "blog_page", NULL, 0);
    }
    if (user_access("maintain personal blog")) {
      menu("blog/" . $user->uid,t("my blog"), "user_page", NULL, 1);
    }
  }

  if ($type == "page" && user_access("access content")) {
    $links[] = l(t("blogs"), "blog", array("title" => t("Read the latest blog entries.")));
  }

  if ($type == "node" && $node->type == "blog") {
    global $mod, $op, $id;

    if (blog_access("update", $node)) {
      $links[] = l(t("edit this blog entry"), "node/edit/$node->nid", array("title" => t("Edit this blog entry.")));
    }
    elseif (empty($id)) {
      $links[] = l(t("%username's blog", array("%username" => $node->name)), "blog/$node->uid", array("title" => t("Read %username's latest blog entries.", array("%username" => $node->name))));
    }
  }

  return $links;
}

function blog_block($op = "list", $delta = 0) {
  global $user;
  if ($op == "list") {
    $block[0]["info"] = t("Blogs");
    return $block;
  }
  else {
    if (user_access("access content")) {
      $block["content"] = node_title_list(db_query_range("SELECT n.title, n.nid FROM {node} n WHERE n.type = 'blog' AND n.status = 1 ORDER BY n.nid DESC", 0, 10));
      $block["content"] .= "<div class=\"more-link\">". l(t("more"), "blog", array("title" => t("Read the latest blog entries."))) ."</div>";
      $block["subject"] = t("Blogs");
    }
    return $block;
  }
}

?>
