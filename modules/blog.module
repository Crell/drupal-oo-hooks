<?php
// $Id$

function blog_system($field){
  $system["description"] = t("Enables keeping a blog or easily and regularly updated web page.");
  return $system[$field];
}

function blog_conf_options() {
  $output = form_textarea(t("Explanation or submission guidelines"), "blog_help", variable_get("blog_help", ""), 55, 4, t("This text is displayed at the top of the blog submission form.  It's useful for helping or instructing your users."));
  $words = t("words");
  $output .= form_select(t("Minimum number of words in a blog entry"), "minimum_blog_size", variable_get("minimum_blog_size", 0), array(0 => "0 $words", 10 => "10 $words", 25 => "25 $words",  50 => "50 $words", 75 => "75 $words", 100 => "100 $words", 125 => "125 $words",  150 => "150 $words", 175 => "175 $words", 200 => "200 $words"), t("The minimum number of words a personal blog entry should contain.  This is useful to rule out submissions that do not meet the site's standards, such as short test posts."));
  return $output;
}

function blog_node($field) {
  global $user;

  $info["name"] = t("personal blog entry");
  $info["description"] = t("A blog is a regularly updated web page that is similar to a diary -- that (generally) anyone in the world can see.  It is made up of individual entries, often called posts, that are time stamped and typically arranged by the day, with the newest on top (a diary is the reverse).  Blogs often contain links to things you've seen, or on which you agree/disagree.   Some blogs also contain original material written solely for the blog.  Since a Blog is personal, you and only you have full control on what you publish.  The most interesting blog entries or those blog entries that fit the site's topic well might get promoted to the front page by the community or the people with access to do this.");

  return $info[$field];
}

function blog_perm() {
  return array("maintain personal blog");
}

function blog_access($op, $node) {
  global $user;

  if ($op == "view") {
    return $node->status;
  }

  if ($op == "create") {
    return user_access("maintain personal blog") && $user->uid;
  }

  if ($op == "update") {
    return user_access("maintain personal blog") && ($user->uid == $node->uid);
  }

  if ($op == "delete") {
    return user_access("maintain personal blog") && ($user->uid == $node->uid);
  }

}

function blog_head($main = 0) {
  global $id, $mod;

  if ($mod == "blog" && $id) {
    $account = user_load(array("uid" => $id));
    $output[] = "<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS - ". $account->name. "'s blog\" href=\"". path_uri(). "module.php?mod=blog&op=view&id=$id\" />";
  }
  return $output ? $output : array();
}

function blog_user($type, &$edit, &$user) {
  switch ($type) {
    case "view_public":
    case "view_private":
      return form_item(t("Blog"), lm(t("view recent entries"), array("mod" => "blog", "id" => $user->uid), "") ."<br />". lm(t("view all entries"), array("mod" => "blog", "id" => $user->uid, "all" => 1), ""));
  }
}

function blog_save($op, $node) {
  if ($op == "approve") {
    return array("promote" => 1);
  }

  if ($op == "create") {
    if (user_access("administer nodes")) {
      /*
      ** When an administrator creates blog entries through the admin
      ** pages, they will not be changed unless explicitly specified.
      */

      return array();
    }
    else {
      return array("promote" => 0, "moderate" => 1, "status" => 1);
    }
  }

  if ($op == "decline") {
    return array("promote" => 0);
  }

  if ($op == "update") {
    if (user_access("administer nodes")) {
      /*
      ** When an administrator updates blog entries through the admin
      ** pages, they will not be changed unless explicitly specified.
      */

      return array();
    }
    else {
      /*
      ** Updating your own blog entry will demote it (if promoted),
      ** and will queue it in the moderation queue for promotion.
      */

      return array("promote" => 0, "moderate" => 1, "score" => 0, "votes" => 0, "users" => 0);
    }
  }

}

function blog_help() {
 ?>
  <p>Drupal's blog module allows registered users to maintain an online blog, often referred to as an online journal or diary.  They can be filled with daily thoughts, poetry, boneless blabber, spiritual theories, intimate details, valuable experiences, cynical rants, semi-coherent comments, writing experiments, artistic babblings, critics on current facts, fresh insights, diverse dreams, chronicles and mumbling madness available for public consumption.  It is made up of individual entries that are timestamped and are typically viewed by day as you would a diary.  Blogs often contain links to things you've seen, or agree/disagree with.  A typical example of a long term blog can be seen at <a href="http://www.scripting.com/">http://www.scripting.com/</a>.</p>
  <p>The blog module adds a couple of menu options.  Everyone gets to see the "latest blogs", a page that displays the most recent blog entries from every participant.  If you are logged in, your personal menu also has "submit a blog" link which will lead you to a submission form.  You are also presented a "view personal blog" menu option that displays your blog entries as other people will see it.  For you only, there is an edit link at the bottom left of a page that lets you edit or delete old entries.</p>
  <p>Both in the import module (news aggregator) and the blog module displays glyphs that looks like a pinboard stickit note.  Click on this and you are taken to the blog submission form.  The system helpfully copies the title, a link to the item, and a link to the source into the body text ready for you to add your explanation.  This actively encourages people to add blog entries about things they see and hear elsewhere in the Drupal site.</p>
  <p>For Drupal administrators a blog entry is just another node that can be administered from the "content management" page in the administration pages.</p>
 <?php
}

function blog_feed_user($uid = 0) {
  global $user;

  if ($uid) {
    $account = user_load(array("uid" => $uid, "status" => 1));
  }
  else {
    $account = $user;
  }

  $result = db_query("SELECT n.nid, n.title, n.teaser, n.created, u.name, u.uid FROM node n LEFT JOIN users u ON n.uid = u.uid WHERE n.type = 'blog' AND u.uid = '$uid' AND n.status = 1 ORDER BY n.nid DESC LIMIT 15");
  $channel["title"] = $account->name. "'s blog";
  $channel["link"] = path_uri(). drupal_url(array ("mod" => "blog", "op" => "view", "id" => $uid), "module");
  $channel["description"] = $term->description;
  node_feed($result, $channel);

}

function blog_feed_last() {
  $result = db_query("SELECT n.nid, n.title, n.teaser, n.created, u.name, u.uid FROM node n LEFT JOIN users u ON n.uid = u.uid WHERE n.type = 'blog' AND n.status = 1 ORDER BY n.nid DESC LIMIT 15");
  $channel["title"] = variable_get("site_name", "drupal"). "blogs";
  $channel["link"] = path_uri(). drupal_url(array ("mod" => "blog", "op" => "view"), "module");
  $channel["description"] = $term->description;
  node_feed($result, $channel);
}

function blog_page_user($uid = 0) {
  global $user, $theme;

  if ($uid) {
    $account = user_load(array("uid" => $uid, "status" => 1));
  }
  else {
    $account = $user;
  }
  $links[] = lm(t("view %username's profile", array("%username" => $account->name)), array("mod" => "user", "id" => $account->uid), "", array("title" => t("View %username's profile information.", array("%username" => $account->name))));
  $links[] = lm(t("view recent blog entries"), array("mod" => "blog", "op" => "view"), "", array("title" => t("View all recent blog entries.")));
  $theme->box(t("%username's blog", array ("%username" => $account->name)), "<center>". $theme->links($links). "</center>");

  $result = pager_query("SELECT nid FROM node WHERE type = 'blog' AND uid = '$account->uid' AND status = 1 ORDER BY nid DESC", $user->nodes ? $user->nodes : variable_get("default_nodes_main", 10));
  while ($node = db_fetch_object($result)) {
    node_view(node_load(array("nid" => $node->nid)), 1);
  }
  print pager_display(NULL, ($user->nodes ? $user->nodes : variable_get("default_nodes_main", 10)));
  print lm("<img align=\"right\" src=\"". $theme->image("xml.gif") ."\" width=\"36\" height=\"14\" border=\"0\" />", array("mod" => "blog", "op" => "feed", "id" => $account->uid), "", array("title" => t("View the XML version of %username's blog", array ("%username" => $account->name))));
}

function blog_page_last() {
  global $user, $theme;

  $result = pager_query("SELECT nid FROM node WHERE type = 'blog' AND status = 1 ORDER BY nid DESC", $user->nodes ? $user->nodes : variable_get("default_nodes_main", 10));

  while ($node = db_fetch_object($result)) {
    $output = node_view(node_load(array("nid" => $node->nid)), 1);
  }
  $output .= pager_display(NULL, ($user->nodes ? $user->nodes : variable_get("default_nodes_main", 10)));
  $output .= lm("<img align=\"right\" src=\"". $theme->image("xml.gif") ."\" width=\"36\" height=\"14\" border=\"0\" />", array("mod" => "blog", "op" => "feed"), "", array("title" => t("Read the XML version of all blogs.")));
  return $output;
}

function blog_form(&$node, &$help, &$error) {
  global $nid, $iid;

  if (isset($node->body)) {

    /*
    ** Validate the size of the blog:
    */

    if (count(explode(" ", $node->body)) < variable_get("minimum_blog_size", 0)) {
      $error["body"] = theme_invoke("theme_error", t("The body of your blog is too short."));
    }
  }
  else {

    /*
    ** Carry out some explanation or submission guidelines:
    */

    $help = variable_get("blog_help", "");

    /*
    ** If the user clicked a "blog it" link, we load the data from the
    ** database and quote it in the blog:
    */

    if ($nid && $blog = node_load(array("nid" => $nid))) {
      $node->body = "<i>". $blog->body ."</i> [".lm($blog->name, array("mod" => "blog", "id" => $blog->uid, "date" => $blog->created))."]";
    }

    if ($iid && $item = db_fetch_object(db_query("SELECT i.*, f.title as ftitle, f.link as flink FROM item i, feed f WHERE i.iid = '%s' AND i.fid = f.fid", $iid))) {
      $node->title = $item->title;
      $node->body = "<a href=\"$item->link\">$item->title</a> - <i>". check_output($item->description) ."</i> [<a href=\"$item->flink\">$item->ftitle</a>]\n";
    }
  }

  if (function_exists("taxonomy_node_form")) {
    $output .= implode("", taxonomy_node_form("blog", $node));
  }
  $output .= form_textarea(t("Body"), "body", $node->body, 60, 15, $error["body"] ? $error["body"] : t("Allowed HTML tags") .": ". htmlspecialchars(variable_get("allowed_html", "")));

  return $output;
}

function blog_page() {
  global $theme, $id, $op, $name;

  if (user_access("access content")) {
    switch ($op) {
      case "feed":
        if ($id) {
          blog_feed_user($id);
        }
        else {
          blog_feed_last();
        }
        break;
      default:
        $theme->header();
        if ($name) {
          $user = user_load(array("name" => $name));
          $id = $user->uid;
        }
        if ($id) {
          blog_page_user($id);
        }
        else {
          print blog_page_last();
        }
        $theme->footer();
    }
  }
  else {
    $theme->header();
    $theme->box(t("Access denied"), message_access());
    $theme->footer();
  }

}

function blog_link($type, $node = 0, $main) {
  global $user;

  if ($type == "page" && user_access("access content")) {
    $links[] = lm(t("user blogs"), array("mod" => "blog"), "", array("title" => t("Read the latest blog entries.")));
  }

  if ($type == "menu.create" && user_access("maintain personal blog")) {
    $links[] = lm(t("create blog entry"), array("mod" => "node", "op" => "add", "type" => "blog"), "", array("title" => t("Add a new personal blog entry.")));
  }

  if ($type == "menu.view" && user_access("maintain personal blog")) {
    $links[] = lm(t("view personal blog"), array("mod" => "blog", "op" => "view", "id" => $user->uid), "", array("title" => t("Read your latest blog entries.")));
  }

  if ($type == "node" && $node->type == "blog") {
    global $mod, $op, $id;

    if (blog_access("update", $node)) {
      $links[] = lm(t("edit this blog"), array("mod" => "node", "op" => "edit", "id" => $node->nid), "", array("title" => t("Edit this blog entry.")));
    }
    elseif (empty($id)) {
      $links[] = lm(t("%username's blog", array("%username" => $node->name)), array("mod" => "blog", "op" => "view", "id" => $node->uid), "", array("title" => t("Read %username's latest blog entries.", array("%username" => $node->name))));
    }
  }

  return $links ? $links : array();
}

function blog_block($op = "list", $delta = 0) {
  global $user;
  if ($op == "list") {
    $block[0]["info"] = t("User blogs");
    return $block;
  }
  else {
    if (user_access("access content")) {
      $block["content"] = node_title_list(db_query("SELECT u.uid, u.name, n.created, n.title, n.nid FROM node n LEFT JOIN users u ON n.uid = u.uid WHERE n.type = 'blog' AND n.status = 1 ORDER BY n.nid DESC LIMIT 10"));
      $block["content"] .= "<div align=\"right\" id=\"blog_more\">". lm(t("more"), array("mod" => "blog"), "", array("title" => t("Read the latest blog entries."))) ."</div>";
      $block["subject"] = t("User blogs");
    }
    return $block;
  }
}

?>